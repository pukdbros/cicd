name: Push to DockerHub and Update K8s Deployment
on:
  pull_request_target:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull latest image 
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/simple-boilerplate-app:latest

      - name: Tag image with release versions
        uses: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/simple-boilerplate-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/simple-boilerplate-app:release-${{ github.run_number }d

      - name: Push new tag to Docker Hub 
        uses: docker push ${{ secrets.DOCKERHUB_USERNAME }}/simple-boilerplate-app:release-${{ github.run_number }}

      - name: Update K8s Deployment 
        run: |
          #Generate a new image tag using the env
          image_with_new_tag="${{ secrets.DOCKERHUB_USERNAME }}/simple-boilerplate-appLrelease-${{ github.run_number }}"

          #Update the K8s deplotment file using yq
          yq eval ".spec.template.spec.containers[0].image |= \"${image_with_new_tag}\"" -i ./manifest/prod/deployment.yaml

          #Commit change
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout main
          git add ./manifest/prod/deployment.yaml
          git commit -m "Update image to ${image_with_new_tag}"
          git push origin main

      - name: connect K8S Cluster
        run: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Cluster
        run: kubectl apply -f ./manifest/dev/.